// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.11.4
// source: protocol.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockLocation_BlockStatus int32

const (
	BlockLocation_Idle  BlockLocation_BlockStatus = 0
	BlockLocation_Using BlockLocation_BlockStatus = 1
)

// Enum value maps for BlockLocation_BlockStatus.
var (
	BlockLocation_BlockStatus_name = map[int32]string{
		0: "Idle",
		1: "Using",
	}
	BlockLocation_BlockStatus_value = map[string]int32{
		"Idle":  0,
		"Using": 1,
	}
)

func (x BlockLocation_BlockStatus) Enum() *BlockLocation_BlockStatus {
	p := new(BlockLocation_BlockStatus)
	*p = x
	return p
}

func (x BlockLocation_BlockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockLocation_BlockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[0].Descriptor()
}

func (BlockLocation_BlockStatus) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[0]
}

func (x BlockLocation_BlockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockLocation_BlockStatus.Descriptor instead.
func (BlockLocation_BlockStatus) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1, 0}
}

type FileOperationArgs_Mode int32

const (
	FileOperationArgs_READ  FileOperationArgs_Mode = 0
	FileOperationArgs_WRITE FileOperationArgs_Mode = 1
)

// Enum value maps for FileOperationArgs_Mode.
var (
	FileOperationArgs_Mode_name = map[int32]string{
		0: "READ",
		1: "WRITE",
	}
	FileOperationArgs_Mode_value = map[string]int32{
		"READ":  0,
		"WRITE": 1,
	}
)

func (x FileOperationArgs_Mode) Enum() *FileOperationArgs_Mode {
	p := new(FileOperationArgs_Mode)
	*p = x
	return p
}

func (x FileOperationArgs_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileOperationArgs_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[1].Descriptor()
}

func (FileOperationArgs_Mode) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[1]
}

func (x FileOperationArgs_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileOperationArgs_Mode.Descriptor instead.
func (FileOperationArgs_Mode) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2, 0}
}

type MetaOperationArgs_OperateMetaMode int32

const (
	MetaOperationArgs_DELETE MetaOperationArgs_OperateMetaMode = 0
	MetaOperationArgs_MKDIR  MetaOperationArgs_OperateMetaMode = 1
)

// Enum value maps for MetaOperationArgs_OperateMetaMode.
var (
	MetaOperationArgs_OperateMetaMode_name = map[int32]string{
		0: "DELETE",
		1: "MKDIR",
	}
	MetaOperationArgs_OperateMetaMode_value = map[string]int32{
		"DELETE": 0,
		"MKDIR":  1,
	}
)

func (x MetaOperationArgs_OperateMetaMode) Enum() *MetaOperationArgs_OperateMetaMode {
	p := new(MetaOperationArgs_OperateMetaMode)
	*p = x
	return p
}

func (x MetaOperationArgs_OperateMetaMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetaOperationArgs_OperateMetaMode) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[2].Descriptor()
}

func (MetaOperationArgs_OperateMetaMode) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[2]
}

func (x MetaOperationArgs_OperateMetaMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetaOperationArgs_OperateMetaMode.Descriptor instead.
func (MetaOperationArgs_OperateMetaMode) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 0}
}

type DatanodeOperation_Operation int32

const (
	DatanodeOperation_DELETE    DatanodeOperation_Operation = 0
	DatanodeOperation_REPLICATE DatanodeOperation_Operation = 1
)

// Enum value maps for DatanodeOperation_Operation.
var (
	DatanodeOperation_Operation_name = map[int32]string{
		0: "DELETE",
		1: "REPLICATE",
	}
	DatanodeOperation_Operation_value = map[string]int32{
		"DELETE":    0,
		"REPLICATE": 1,
	}
)

func (x DatanodeOperation_Operation) Enum() *DatanodeOperation_Operation {
	p := new(DatanodeOperation_Operation)
	*p = x
	return p
}

func (x DatanodeOperation_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatanodeOperation_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[3].Descriptor()
}

func (DatanodeOperation_Operation) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[3]
}

func (x DatanodeOperation_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatanodeOperation_Operation.Descriptor instead.
func (DatanodeOperation_Operation) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{17, 0}
}

type BlockList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockL    []*BlockLocation `protobuf:"bytes,1,rep,name=BlockL,proto3" json:"BlockL,omitempty"`
	Num       int64            `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	DiskUsage int64            `protobuf:"varint,3,opt,name=DiskUsage,proto3" json:"DiskUsage,omitempty"`
	DNName    string           `protobuf:"bytes,4,opt,name=DNName,proto3" json:"DNName,omitempty"`
}

func (x *BlockList) Reset() {
	*x = BlockList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockList) ProtoMessage() {}

func (x *BlockList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockList.ProtoReflect.Descriptor instead.
func (*BlockList) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *BlockList) GetBlockL() []*BlockLocation {
	if x != nil {
		return x.BlockL
	}
	return nil
}

func (x *BlockList) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *BlockList) GetDiskUsage() int64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *BlockList) GetDNName() string {
	if x != nil {
		return x.DNName
	}
	return ""
}

type BlockLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddr       string                    `protobuf:"bytes,1,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	BlockName    string                    `protobuf:"bytes,2,opt,name=blockName,proto3" json:"blockName,omitempty"`
	BlockSize    int64                     `protobuf:"varint,3,opt,name=blockSize,proto3" json:"blockSize,omitempty"`
	ReplicaID    string                    `protobuf:"bytes,4,opt,name=replicaID,proto3" json:"replicaID,omitempty"`
	ReplicaState BlockLocation_BlockStatus `protobuf:"varint,5,opt,name=replicaState,proto3,enum=proto.BlockLocation_BlockStatus" json:"replicaState,omitempty"`
}

func (x *BlockLocation) Reset() {
	*x = BlockLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockLocation) ProtoMessage() {}

func (x *BlockLocation) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockLocation.ProtoReflect.Descriptor instead.
func (*BlockLocation) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *BlockLocation) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *BlockLocation) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

func (x *BlockLocation) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *BlockLocation) GetReplicaID() string {
	if x != nil {
		return x.ReplicaID
	}
	return ""
}

func (x *BlockLocation) GetReplicaState() BlockLocation_BlockStatus {
	if x != nil {
		return x.ReplicaState
	}
	return BlockLocation_Idle
}

type FileOperationArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Mode     FileOperationArgs_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=proto.FileOperationArgs_Mode" json:"mode,omitempty"`
	BlockNum int64                  `protobuf:"varint,3,opt,name=blockNum,proto3" json:"blockNum,omitempty"`
}

func (x *FileOperationArgs) Reset() {
	*x = FileOperationArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOperationArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOperationArgs) ProtoMessage() {}

func (x *FileOperationArgs) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOperationArgs.ProtoReflect.Descriptor instead.
func (*FileOperationArgs) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *FileOperationArgs) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileOperationArgs) GetMode() FileOperationArgs_Mode {
	if x != nil {
		return x.Mode
	}
	return FileOperationArgs_READ
}

func (x *FileOperationArgs) GetBlockNum() int64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type MetaOperationArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string                            `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Mode     MetaOperationArgs_OperateMetaMode `protobuf:"varint,2,opt,name=mode,proto3,enum=proto.MetaOperationArgs_OperateMetaMode" json:"mode,omitempty"`
}

func (x *MetaOperationArgs) Reset() {
	*x = MetaOperationArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaOperationArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaOperationArgs) ProtoMessage() {}

func (x *MetaOperationArgs) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaOperationArgs.ProtoReflect.Descriptor instead.
func (*MetaOperationArgs) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *MetaOperationArgs) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MetaOperationArgs) GetMode() MetaOperationArgs_OperateMetaMode {
	if x != nil {
		return x.Mode
	}
	return MetaOperationArgs_DELETE
}

type RenameArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath string `protobuf:"bytes,1,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	TargetPath string `protobuf:"bytes,2,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
}

func (x *RenameArgs) Reset() {
	*x = RenameArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameArgs) ProtoMessage() {}

func (x *RenameArgs) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameArgs.ProtoReflect.Descriptor instead.
func (*RenameArgs) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *RenameArgs) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *RenameArgs) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

type PathArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathName string `protobuf:"bytes,1,opt,name=pathName,proto3" json:"pathName,omitempty"`
}

func (x *PathArgs) Reset() {
	*x = PathArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathArgs) ProtoMessage() {}

func (x *PathArgs) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathArgs.ProtoReflect.Descriptor instead.
func (*PathArgs) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *PathArgs) GetPathName() string {
	if x != nil {
		return x.PathName
	}
	return ""
}

type MetaStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileLocationResp *FileLocationResp `protobuf:"bytes,1,opt,name=FileLocationResp,proto3" json:"FileLocationResp,omitempty"`
	FilePath         string            `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileSize         uint64            `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	ClientName       string            `protobuf:"bytes,4,opt,name=clientName,proto3" json:"clientName,omitempty"`
}

func (x *MetaStore) Reset() {
	*x = MetaStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaStore) ProtoMessage() {}

func (x *MetaStore) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaStore.ProtoReflect.Descriptor instead.
func (*MetaStore) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *MetaStore) GetFileLocationResp() *FileLocationResp {
	if x != nil {
		return x.FileLocationResp
	}
	return nil
}

func (x *MetaStore) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *MetaStore) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MetaStore) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type GetLeaseArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pathname   *PathArgs `protobuf:"bytes,1,opt,name=pathname,proto3" json:"pathname,omitempty"`
	ClientName string    `protobuf:"bytes,2,opt,name=clientName,proto3" json:"clientName,omitempty"`
}

func (x *GetLeaseArgs) Reset() {
	*x = GetLeaseArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaseArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaseArgs) ProtoMessage() {}

func (x *GetLeaseArgs) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaseArgs.ProtoReflect.Descriptor instead.
func (*GetLeaseArgs) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *GetLeaseArgs) GetPathname() *PathArgs {
	if x != nil {
		return x.Pathname
	}
	return nil
}

func (x *GetLeaseArgs) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type FileWriteStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File      *File      `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	BlockList *BlockList `protobuf:"bytes,2,opt,name=BlockList,proto3" json:"BlockList,omitempty"`
}

func (x *FileWriteStream) Reset() {
	*x = FileWriteStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileWriteStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWriteStream) ProtoMessage() {}

func (x *FileWriteStream) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWriteStream.ProtoReflect.Descriptor instead.
func (*FileWriteStream) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *FileWriteStream) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileWriteStream) GetBlockList() *BlockList {
	if x != nil {
		return x.BlockList
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *Ping) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskUsage uint64 `protobuf:"varint,2,opt,name=DiskUsage,proto3" json:"DiskUsage,omitempty"`
	Addr      string `protobuf:"bytes,3,opt,name=Addr,proto3" json:"Addr,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *Heartbeat) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *Heartbeat) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type RegisterDataNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	New         bool   `protobuf:"varint,1,opt,name=new,proto3" json:"new,omitempty"`
	DiskUsage   uint64 `protobuf:"varint,2,opt,name=DiskUsage,proto3" json:"DiskUsage,omitempty"`
	Addr        string `protobuf:"bytes,3,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	BlockNum    uint64 `protobuf:"varint,5,opt,name=BlockNum,proto3" json:"BlockNum,omitempty"`
	ReplicaName string `protobuf:"bytes,6,opt,name=ReplicaName,proto3" json:"ReplicaName,omitempty"`
}

func (x *RegisterDataNodeReq) Reset() {
	*x = RegisterDataNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeReq) ProtoMessage() {}

func (x *RegisterDataNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeReq.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeReq) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterDataNodeReq) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *RegisterDataNodeReq) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *RegisterDataNodeReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RegisterDataNodeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterDataNodeReq) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *RegisterDataNodeReq) GetReplicaName() string {
	if x != nil {
		return x.ReplicaName
	}
	return ""
}

type FileLocationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileBlocksList []*BlockList `protobuf:"bytes,1,rep,name=FileBlocksList,proto3" json:"FileBlocksList,omitempty"`
}

func (x *FileLocationResp) Reset() {
	*x = FileLocationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLocationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLocationResp) ProtoMessage() {}

func (x *FileLocationResp) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLocationResp.ProtoReflect.Descriptor instead.
func (*FileLocationResp) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *FileLocationResp) GetFileBlocksList() []*BlockList {
	if x != nil {
		return x.FileBlocksList
	}
	return nil
}

type OperationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *OperationStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FileMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize string `protobuf:"bytes,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	IsDir    bool   `protobuf:"varint,3,opt,name=isDir,proto3" json:"isDir,omitempty"`
}

func (x *FileMetaInfo) Reset() {
	*x = FileMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaInfo) ProtoMessage() {}

func (x *FileMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaInfo.ProtoReflect.Descriptor instead.
func (*FileMetaInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *FileMetaInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMetaInfo) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

func (x *FileMetaInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type DirMetaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaList []*FileMetaInfo `protobuf:"bytes,1,rep,name=metaList,proto3" json:"metaList,omitempty"`
}

func (x *DirMetaList) Reset() {
	*x = DirMetaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirMetaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirMetaList) ProtoMessage() {}

func (x *DirMetaList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirMetaList.ProtoReflect.Descriptor instead.
func (*DirMetaList) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *DirMetaList) GetMetaList() []*FileMetaInfo {
	if x != nil {
		return x.MetaList
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type DatanodeOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation DatanodeOperation_Operation `protobuf:"varint,1,opt,name=operation,proto3,enum=proto.DatanodeOperation_Operation" json:"operation,omitempty"`
	IpAddr    string                      `protobuf:"bytes,2,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
}

func (x *DatanodeOperation) Reset() {
	*x = DatanodeOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatanodeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatanodeOperation) ProtoMessage() {}

func (x *DatanodeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatanodeOperation.ProtoReflect.Descriptor instead.
func (*DatanodeOperation) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *DatanodeOperation) GetOperation() DatanodeOperation_Operation {
	if x != nil {
		return x.Operation
	}
	return DatanodeOperation_DELETE
}

func (x *DatanodeOperation) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

var File_protocol_proto protoreflect.FileDescriptor

var file_protocol_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x4e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x4e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x0d,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12,
	0x44, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x22, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x72, 0x67, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x1b, 0x0a, 0x04, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x61,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x44, 0x49, 0x52, 0x10,
	0x01, 0x22, 0x4c, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22,
	0x26, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x41, 0x72, 0x67, 0x73, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x62, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22,
	0x3d, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x22, 0xab,
	0x01, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x44, 0x69, 0x73,
	0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x10,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x38, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x3e, 0x0a, 0x0b, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61,
	0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x22, 0x26, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x32,
	0x90, 0x04, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x32, 0x4e, 0x4e, 0x12, 0x42, 0x0a,
	0x0d, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37,
	0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x32, 0xb9, 0x01, 0x0a, 0x05, 0x44, 0x4e, 0x32, 0x4e, 0x4e, 0x12, 0x37, 0x0a, 0x09,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e,
	0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x33,
	0x0a, 0x05, 0x4e, 0x4e, 0x32, 0x44, 0x4e, 0x12, 0x2a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x32, 0x84, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x32, 0x44,
	0x4e, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData = file_protocol_proto_rawDesc
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_rawDescData)
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_protocol_proto_goTypes = []interface{}{
	(BlockLocation_BlockStatus)(0),         // 0: proto.BlockLocation.BlockStatus
	(FileOperationArgs_Mode)(0),            // 1: proto.FileOperationArgs.Mode
	(MetaOperationArgs_OperateMetaMode)(0), // 2: proto.MetaOperationArgs.OperateMetaMode
	(DatanodeOperation_Operation)(0),       // 3: proto.DatanodeOperation.Operation
	(*BlockList)(nil),                      // 4: proto.BlockList
	(*BlockLocation)(nil),                  // 5: proto.BlockLocation
	(*FileOperationArgs)(nil),              // 6: proto.FileOperationArgs
	(*MetaOperationArgs)(nil),              // 7: proto.MetaOperationArgs
	(*RenameArgs)(nil),                     // 8: proto.RenameArgs
	(*PathArgs)(nil),                       // 9: proto.PathArgs
	(*MetaStore)(nil),                      // 10: proto.MetaStore
	(*GetLeaseArgs)(nil),                   // 11: proto.GetLeaseArgs
	(*FileWriteStream)(nil),                // 12: proto.FileWriteStream
	(*Ping)(nil),                           // 13: proto.Ping
	(*Heartbeat)(nil),                      // 14: proto.Heartbeat
	(*RegisterDataNodeReq)(nil),            // 15: proto.RegisterDataNodeReq
	(*FileLocationResp)(nil),               // 16: proto.FileLocationResp
	(*OperationStatus)(nil),                // 17: proto.OperationStatus
	(*FileMetaInfo)(nil),                   // 18: proto.FileMetaInfo
	(*DirMetaList)(nil),                    // 19: proto.DirMetaList
	(*File)(nil),                           // 20: proto.File
	(*DatanodeOperation)(nil),              // 21: proto.DatanodeOperation
}
var file_protocol_proto_depIdxs = []int32{
	5,  // 0: proto.BlockList.BlockL:type_name -> proto.BlockLocation
	0,  // 1: proto.BlockLocation.replicaState:type_name -> proto.BlockLocation.BlockStatus
	1,  // 2: proto.FileOperationArgs.mode:type_name -> proto.FileOperationArgs.Mode
	2,  // 3: proto.MetaOperationArgs.mode:type_name -> proto.MetaOperationArgs.OperateMetaMode
	16, // 4: proto.MetaStore.FileLocationResp:type_name -> proto.FileLocationResp
	9,  // 5: proto.GetLeaseArgs.pathname:type_name -> proto.PathArgs
	20, // 6: proto.FileWriteStream.file:type_name -> proto.File
	4,  // 7: proto.FileWriteStream.BlockList:type_name -> proto.BlockList
	4,  // 8: proto.FileLocationResp.FileBlocksList:type_name -> proto.BlockList
	18, // 9: proto.DirMetaList.metaList:type_name -> proto.FileMetaInfo
	3,  // 10: proto.DatanodeOperation.operation:type_name -> proto.DatanodeOperation.Operation
	6,  // 11: proto.Client2NN.FileOperation:input_type -> proto.FileOperationArgs
	9,  // 12: proto.Client2NN.GetFile:input_type -> proto.PathArgs
	9,  // 13: proto.Client2NN.PutFile:input_type -> proto.PathArgs
	7,  // 14: proto.Client2NN.MetaOperation:input_type -> proto.MetaOperationArgs
	8,  // 15: proto.Client2NN.RenameMeta:input_type -> proto.RenameArgs
	9,  // 16: proto.Client2NN.GetFileMeta:input_type -> proto.PathArgs
	9,  // 17: proto.Client2NN.GetDirMeta:input_type -> proto.PathArgs
	10, // 18: proto.Client2NN.PutComplete:input_type -> proto.MetaStore
	11, // 19: proto.Client2NN.RenewLock:input_type -> proto.GetLeaseArgs
	14, // 20: proto.DN2NN.HeartBeat:input_type -> proto.Heartbeat
	4,  // 21: proto.DN2NN.BlockReport:input_type -> proto.BlockList
	15, // 22: proto.DN2NN.Register:input_type -> proto.RegisterDataNodeReq
	13, // 23: proto.NN2DN.GetReport:input_type -> proto.Ping
	6,  // 24: proto.Client2DN.GetBlock:input_type -> proto.FileOperationArgs
	12, // 25: proto.Client2DN.WriteBlock:input_type -> proto.FileWriteStream
	16, // 26: proto.Client2NN.FileOperation:output_type -> proto.FileLocationResp
	16, // 27: proto.Client2NN.GetFile:output_type -> proto.FileLocationResp
	16, // 28: proto.Client2NN.PutFile:output_type -> proto.FileLocationResp
	17, // 29: proto.Client2NN.MetaOperation:output_type -> proto.OperationStatus
	17, // 30: proto.Client2NN.RenameMeta:output_type -> proto.OperationStatus
	18, // 31: proto.Client2NN.GetFileMeta:output_type -> proto.FileMetaInfo
	19, // 32: proto.Client2NN.GetDirMeta:output_type -> proto.DirMetaList
	17, // 33: proto.Client2NN.PutComplete:output_type -> proto.OperationStatus
	17, // 34: proto.Client2NN.RenewLock:output_type -> proto.OperationStatus
	21, // 35: proto.DN2NN.HeartBeat:output_type -> proto.DatanodeOperation
	17, // 36: proto.DN2NN.BlockReport:output_type -> proto.OperationStatus
	17, // 37: proto.DN2NN.Register:output_type -> proto.OperationStatus
	4,  // 38: proto.NN2DN.GetReport:output_type -> proto.BlockList
	20, // 39: proto.Client2DN.GetBlock:output_type -> proto.File
	17, // 40: proto.Client2DN.WriteBlock:output_type -> proto.OperationStatus
	26, // [26:41] is the sub-list for method output_type
	11, // [11:26] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOperationArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaOperationArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaseArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileWriteStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLocationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirMetaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatanodeOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		EnumInfos:         file_protocol_proto_enumTypes,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_rawDesc = nil
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
